{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","className","s","form","this","label","input","type","pattern","title","onChange","required","submitButton","Component","ContactList","contacts","onDelete","contactList","map","id","contactItem","contactInfo","deleteButton","onClick","Filter","filter","Phonebook","addContact","newContact","uuidv4","some","contact","alert","removeContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","app","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.eb013464.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Vg-n\",\"label\":\"ContactForm_label__3cHHZ\",\"input\":\"ContactForm_input__3vTnV\",\"submitButton\":\"ContactForm_submitButton__5eW1E\"};","import { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  //   static propTypes = {\r\n  //     name: PropTypes.string.isRequired,\r\n  //     number: PropTypes.string.isRequired,\r\n  //   };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  // запись имени и номера телефона в стейт\r\n  handleChange = e => {\r\n    // console.log(e.currentTarget.name);\r\n    // console.log(e.currentTarget.value);\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // добавление контакта в список контактов и сброс инпутов\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  // сброс стейта\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={s.submitButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ol className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.contactItem} key={id}>\r\n          <p className={s.contactInfo}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={s.deleteButton}\r\n            id={id}\r\n            onClick={() => onDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\n// import { Component } from 'react';\r\n\r\n// class ContactList extends Component {\r\n//   render() {\r\n//     return (\r\n//       <ol>\r\n//         {this.props.contacts.map(({ id, name, number }) => (\r\n//           <li key={id}>\r\n//             <p>\r\n//               {name}: {number}\r\n//             </p>\r\n//             <button id={id} onClick={this.props.onDelete}>\r\n//               Delete\r\n//             </button>\r\n//           </li>\r\n//         ))}\r\n//       </ol>\r\n//     );\r\n//   }\r\n// }\r\n// export default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './App.module.css';\r\n\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nclass Phonebook extends Component {\r\n  // static propTypes = {\r\n  //   contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  //   filter: PropTypes.string.isRequired,\r\n  // };\r\n\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  // добавление контактов с проверкой на уникальность\r\n  addContact = ({ name, number }) => {\r\n    // console.log({ name, number });\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (this.state.contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already exist`);\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [newContact, ...contacts],\r\n      }));\r\n    }\r\n    // setTimeout(() => console.log(this.state.contacts), 1000);\r\n  };\r\n\r\n  // удаление одного контакта по клику на кнопку \"Delete\"\r\n  removeContact = contactId => {\r\n    // console.log(e.target);\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => {\r\n        return contact.id !== contactId;\r\n      }),\r\n    }));\r\n  };\r\n\r\n  // запись значения поля фильтра в стейт\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  // получение списка контактов по значению из фильтра\r\n  getVisibleContacts = () => {\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n\r\n    return (\r\n      <div className={s.app}>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n\r\n        <h2 className={s.title}>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={this.getVisibleContacts()}\r\n          onDelete={this.removeContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__JIo0X\",\"contactItem\":\"ContactList_contactItem__347Et\",\"contactInfo\":\"ContactList_contactInfo__2hqfA\",\"deleteButton\":\"ContactList_deleteButton__MckqC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3f89W\",\"title\":\"App_title__nGVQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__tk2GK\",\"label\":\"Filter_label__38lY5\",\"input\":\"Filter_input__3IwBY\"};"],"sourceRoot":""}