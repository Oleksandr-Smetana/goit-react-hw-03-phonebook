{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","className","s","form","this","label","input","type","pattern","title","onChange","required","submitButton","Component","ContactList","contacts","onDelete","contactList","map","id","contactItem","contactInfo","deleteButton","onClick","Filter","filter","Phonebook","addContact","newContact","uuidv4","some","contact","alert","removeContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","app","length","notification","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.0b834810.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Vg-n\",\"label\":\"ContactForm_label__3cHHZ\",\"input\":\"ContactForm_input__3vTnV\",\"submitButton\":\"ContactForm_submitButton__5eW1E\"};","import { Component } from \"react\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  // запись имени и номера телефона в стейт\n  handleChange = (e) => {\n    // console.log(e.currentTarget.name);\n    // console.log(e.currentTarget.value);\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  // добавление контакта в список контактов и сброс инпутов\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  // сброс стейта\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <button className={s.submitButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <ol className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.contactItem} key={id}>\n          <p className={s.contactInfo}>\n            {name}: {number}\n          </p>\n          <button\n            className={s.deleteButton}\n            id={id}\n            onClick={() => onDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ol>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./App.module.css\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  // добавление контактов с проверкой на уникальность\n  addContact = ({ name, number }) => {\n    // console.log({ name, number });\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (this.state.contacts.some((contact) => contact.name === name)) {\n      alert(`${name} is already exist`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [newContact, ...contacts],\n      }));\n    }\n    // setTimeout(() => console.log(this.state.contacts), 1000);\n  };\n\n  // удаление одного контакта по клику на кнопку \"Delete\"\n  removeContact = (contactId) => {\n    // console.log(e.target);\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => {\n        return contact.id !== contactId;\n      }),\n    }));\n  };\n\n  // запись значения поля фильтра в стейт\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  // получение списка контактов по значению из фильтра\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <div className={s.app}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        {this.getVisibleContacts().length !== 0 ? (\n          <ContactList\n            contacts={this.getVisibleContacts()}\n            onDelete={this.removeContact}\n          />\n        ) : (\n          <p className={s.notification}>There are no contacts yet...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3f89W\",\"title\":\"App_title__nGVQW\",\"notification\":\"App_notification__113h-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__JIo0X\",\"contactItem\":\"ContactList_contactItem__347Et\",\"contactInfo\":\"ContactList_contactInfo__2hqfA\",\"deleteButton\":\"ContactList_deleteButton__MckqC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__tk2GK\",\"label\":\"Filter_label__38lY5\",\"input\":\"Filter_input__3IwBY\"};"],"sourceRoot":""}